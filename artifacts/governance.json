{
  "source": {
    "hash": "0xddbbbd09f74304899afcd48f3dac5acde8b6a3f8b8ef400abf12df628dc4d413",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.86.0-nightly",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "5.0.2",
      "rust_toolchain": "nightly-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "governance",
    "version": "0.0.1",
    "authors": [
      "Jorge Almeida<jorg.almeida@pidchat.com>"
    ]
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "token_address",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 5
            }
          },
          {
            "label": "price_per_channel",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 3
            }
          },
          {
            "label": "qtd_total_per_vote",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 3
            }
          },
          {
            "label": "fee_receiver",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          "Creates a new instance of the governance contract",
          "",
          "# Arguments",
          "* `token_address` - Optional address of the governance token contract",
          "* `fee_receiver` - Optional address that will receive collected fees",
          "",
          "# Returns",
          "* New instance of GovernanceContract with initialized storage"
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 6
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 3
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 31
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 32
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 30
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 4
      }
    },
    "events": [],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 8
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets current price for creating channels"
        ],
        "label": "GovernanceImp::get_prices",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0x327cd24f"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets current vote counts and details for price change vote"
        ],
        "label": "GovernanceImp::get_votes_price",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 13
        },
        "selector": "0x9400dc49"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Allows fee receiver to withdraw accumulated fees"
        ],
        "label": "GovernanceImp::get_fee_receiver_withdrawal",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0x2a5e2a45"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Updates channel price if vote passed"
        ],
        "label": "GovernanceImp::sync",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x009ae61b"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets total number of fake news votes opened"
        ],
        "label": "GovernanceImp::get_total_fake_open",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0x70620cc2"
      },
      {
        "args": [
          {
            "label": "is_proved",
            "type": {
              "displayName": [
                "governanceimp_external",
                "DoingVotePriceInput1"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [
          " Casts vote for price change"
        ],
        "label": "GovernanceImp::doing_vote_price",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xc7f94b38"
      },
      {
        "args": [
          {
            "label": "new_price",
            "type": {
              "displayName": [
                "governanceimp_external",
                "OpenVoteForPriceInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Opens voting period for changing channel price"
        ],
        "label": "GovernanceImp::open_vote_for_price",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0x3602612c"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "RewardSafeForFakeNewsInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Claims reward for correctly identifying fake news",
          " Returns reward amount if successful"
        ],
        "label": "GovernanceImp::reward_safe_for_fake_news",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0x8a020509"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "RecoverySafeBalancePublicInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Allows channel owner to recover staked balance after expiry"
        ],
        "label": "GovernanceImp::recovery_safe_balance_public",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0xfefe0fd2"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "GetChannelInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Gets channel details by ID",
          " Returns tuple of (owner, balance, expiry timestamp, creator) if found"
        ],
        "label": "GovernanceImp::get_channel",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xed34679a"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets accumulated fee balance"
        ],
        "label": "GovernanceImp::get_fee_receiver_balance",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x202ce326"
      },
      {
        "args": [
          {
            "label": "address_contract",
            "type": {
              "displayName": [
                "governanceimp_external",
                "GetIdChannelInput1"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Gets channel ID for given contract address"
        ],
        "label": "GovernanceImp::get_id_channel",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x99bd3f8d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets total amount of tokens locked in contract"
        ],
        "label": "GovernanceImp::get_balance_token_locked",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0xc8f89cd5"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "DoingVoteFakeInput1"
              ],
              "type": 3
            }
          },
          {
            "label": "is_fake",
            "type": {
              "displayName": [
                "governanceimp_external",
                "DoingVoteFakeInput2"
              ],
              "type": 18
            }
          }
        ],
        "default": false,
        "docs": [
          " Casts vote for fake news"
        ],
        "label": "GovernanceImp::doing_vote_fake",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xe647e51b"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "GetVotesFakesNewsInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Gets current vote counts and deadline for fake news vote"
        ],
        "label": "GovernanceImp::get_votes_fakes_news",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xd480cb52"
      },
      {
        "args": [
          {
            "label": "address_channel",
            "type": {
              "displayName": [
                "governanceimp_external",
                "AddMessagesPublicInput1"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Creates a new public channel with payment",
          " Takes channel address as input and returns channel ID"
        ],
        "label": "GovernanceImp::add_messages_public",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0x017df7d9"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets total number of channels created"
        ],
        "label": "GovernanceImp::get_total_channel",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0xca5f3e29"
      },
      {
        "args": [
          {
            "label": "channel_id",
            "type": {
              "displayName": [
                "governanceimp_external",
                "OpenVoteForFakeNewsInput1"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Opens voting period for marking content as fake news"
        ],
        "label": "GovernanceImp::open_vote_for_fake_news",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 16
        },
        "selector": "0xa67839ca"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets fee receiver wallet address"
        ],
        "label": "GovernanceImp::get_fee_receiver_wallet",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 29
        },
        "selector": "0x56aad75f"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets total votes allowed per voting round"
        ],
        "label": "GovernanceImp::get_total_votes_allowed",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x9a20ed21"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets the current price per channel"
        ],
        "label": "GovernanceImp::get_price_per_channel",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x52340f96"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 0
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "token_address"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "channel_id"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "channel_fake_id"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x1b018db9",
                                      "ty": 0
                                    }
                                  },
                                  "name": "0"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x1b018db9",
                                      "ty": 3
                                    }
                                  },
                                  "name": "1"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x1b018db9",
                                      "ty": 4
                                    }
                                  },
                                  "name": "2"
                                },
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x1b018db9",
                                      "ty": 0
                                    }
                                  },
                                  "name": "3"
                                }
                              ],
                              "name": "(A, B, C, D)"
                            }
                          },
                          "root_key": "0x1b018db9"
                        }
                      },
                      "name": "channels"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xe032cb3a",
                              "ty": 3
                            }
                          },
                          "root_key": "0xe032cb3a"
                        }
                      },
                      "name": "channels_for_addrress"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "price"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "vote_id"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "new_price"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "vote_price_end"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xb94fe5be",
                              "ty": 0
                            }
                          },
                          "root_key": "0xb94fe5be"
                        }
                      },
                      "name": "who_open_fake"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x38f07860",
                              "ty": 4
                            }
                          },
                          "root_key": "0x38f07860"
                        }
                      },
                      "name": "channel_fake_in_user"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x9fbff696",
                              "ty": 3
                            }
                          },
                          "root_key": "0x9fbff696"
                        }
                      },
                      "name": "qtd_fake_yes"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x384f64f8",
                              "ty": 3
                            }
                          },
                          "root_key": "0x384f64f8"
                        }
                      },
                      "name": "qtd_fake_no"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x183d362b",
                              "ty": 3
                            }
                          },
                          "root_key": "0x183d362b"
                        }
                      },
                      "name": "recovery_in_user_payment"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x976f6394",
                              "ty": 4
                            }
                          },
                          "root_key": "0x976f6394"
                        }
                      },
                      "name": "price_vote_auditor"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xb76607bf",
                              "ty": 3
                            }
                          },
                          "root_key": "0xb76607bf"
                        }
                      },
                      "name": "qtd_price_no"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x59aa59ef",
                              "ty": 3
                            }
                          },
                          "root_key": "0x59aa59ef"
                        }
                      },
                      "name": "qtd_price_yes"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0xc8f65d5e",
                              "ty": 4
                            }
                          },
                          "root_key": "0xc8f65d5e"
                        }
                      },
                      "name": "deadlines_fake"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x604f6cdf",
                              "ty": 3
                            }
                          },
                          "root_key": "0x604f6cdf"
                        }
                      },
                      "name": "open_fake"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 0
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "fee_receiver"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "fee_balance"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "qtd_total_per_vote"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "balance_of_auditor"
                    }
                  ],
                  "name": "Data"
                }
              },
              "name": "governance_data"
            }
          ],
          "name": "GovernanceContract"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 12,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "InsufficientBalance"
              },
              {
                "index": 2,
                "name": "InsufficientAllowance"
              },
              {
                "index": 3,
                "name": "ZeroRecipientAddress"
              },
              {
                "index": 4,
                "name": "ZeroSenderAddress"
              },
              {
                "fields": [
                  {
                    "type": 12,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "psp22",
          "PSP22Error"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 14
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 14
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "tuple": [
            3,
            3,
            3,
            4
          ]
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 17
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 20
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 21
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 22
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "tuple": [
            0,
            3,
            4,
            0
          ]
        }
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 25
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 27
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 27
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 28
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "tuple": [
            3,
            3,
            4
          ]
        }
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}